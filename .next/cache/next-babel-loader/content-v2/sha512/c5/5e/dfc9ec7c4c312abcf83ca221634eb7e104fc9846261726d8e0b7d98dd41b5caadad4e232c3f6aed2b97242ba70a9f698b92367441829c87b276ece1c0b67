{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarah/Desktop/Redux/next_project/pages/[meetupId]/index.js\";\n// our-domain.com/[meetupId]\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://USERNAME:C5jk78c5JK87@cluster0.vmnfv.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  //fetch data for a single meetup\n  const client = await MongoClient.connect('mongodb+srv://USERNAME:API_KEY@cluster0.vmnfv.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/sarah/Desktop/Redux/next_project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","React","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","description","title","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["// our-domain.com/[meetupId]\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return (\n    <Fragment>\n      <Head>\n        <meta name='description' content={props.meetupData.description} />\n        <title>{props.meetupData.title}</title>\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </Fragment>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    'mongodb+srv://USERNAME:C5jk78c5JK87@cluster0.vmnfv.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString(),\n        },\n      };\n    }),\n  };\n};\n\nexport const getStaticProps = async context => {\n  //fetch data for a single meetup\n  const client = await MongoClient.connect(\n    'mongodb+srv://USERNAME:API_KEY@cluster0.vmnfv.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}